{"ast":null,"code":"import auth0 from \"auth0-js\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nconsole.log(auth0);\nimport getConfig from \"next/config\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\n\nclass Auth0 {\n  constructor() {\n    this.auth = new auth0.WebAuth({\n      domain: \"dione616.eu.auth0.com\",\n      clientID: `${publicRuntimeConfig.client_id}`,\n      redirectUri: `${publicRuntimeConfig.base_url}/login-success`,\n      responseType: \"token id_token\",\n      scope: \"openid\"\n    });\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n}\n\nconst auth0Serv = new Auth0();\nexport default auth0Serv;","map":{"version":3,"sources":["E:/ProgramingTraining/Courses/2020/Coding Revolution Next Redux/pizzeria/lib/appAuth.js"],"names":["auth0","Cookies","axios","console","log","getConfig","publicRuntimeConfig","Auth0","constructor","auth","WebAuth","domain","clientID","client_id","redirectUri","base_url","responseType","scope","login","authorize","auth0Serv"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,OAAOK,SAAP,MAAsB,aAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BD,SAAS,EAAzC;;AAEA,MAAME,KAAN,CAAY;AACVC,EAAAA,WAAW,GAAG;AACZ,SAAKC,IAAL,GAAY,IAAIT,KAAK,CAACU,OAAV,CAAkB;AAC5BC,MAAAA,MAAM,EAAE,uBADoB;AAE5BC,MAAAA,QAAQ,EAAG,GAAEN,mBAAmB,CAACO,SAAU,EAFf;AAG5BC,MAAAA,WAAW,EAAG,GAAER,mBAAmB,CAACS,QAAS,gBAHjB;AAI5BC,MAAAA,YAAY,EAAE,gBAJc;AAK5BC,MAAAA,KAAK,EAAE;AALqB,KAAlB,CAAZ;AAOD;;AACDC,EAAAA,KAAK,GAAG;AACN,SAAKlB,KAAL,CAAWmB,SAAX;AACD;;AAZS;;AAcZ,MAAMC,SAAS,GAAG,IAAIb,KAAJ,EAAlB;AACA,eAAea,SAAf","sourcesContent":["import auth0 from \"auth0-js\"\r\nimport Cookies from \"js-cookie\"\r\nimport axios from \"axios\"\r\n\r\nconsole.log(auth0)\r\n\r\nimport getConfig from \"next/config\"\r\nconst { publicRuntimeConfig } = getConfig()\r\n\r\nclass Auth0 {\r\n  constructor() {\r\n    this.auth = new auth0.WebAuth({\r\n      domain: \"dione616.eu.auth0.com\",\r\n      clientID: `${publicRuntimeConfig.client_id}`,\r\n      redirectUri: `${publicRuntimeConfig.base_url}/login-success`,\r\n      responseType: \"token id_token\",\r\n      scope: \"openid\",\r\n    })\r\n  }\r\n  login() {\r\n    this.auth0.authorize()\r\n  }\r\n}\r\nconst auth0Serv = new Auth0()\r\nexport default auth0Serv\r\n"]},"metadata":{},"sourceType":"module"}