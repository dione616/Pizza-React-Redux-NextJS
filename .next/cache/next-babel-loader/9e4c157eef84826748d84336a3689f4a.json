{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SEND_MESSAGE, CLEAR_MESSAGE } from \"./types\";\nexport const messageReducer = (state = null, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          sendEmail: action.payload\n        });\n      }\n\n    case CLEAR_MESSAGE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          sendEmail: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/ProgramingTraining/Courses/2020/Coding Revolution Next Redux/pizzeria/store/reducers/msg_reducer.js"],"names":["SEND_MESSAGE","CLEAR_MESSAGE","messageReducer","state","action","type","sendEmail","payload"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,SAA5C;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,YAAL;AAAmB;AACjB,+CAAYG,KAAZ;AAAmBG,UAAAA,SAAS,EAAEF,MAAM,CAACG;AAArC;AACD;;AACD,SAAKN,aAAL;AAAoB;AAClB,+CAAYE,KAAZ;AAAmBG,UAAAA,SAAS,EAAEF,MAAM,CAACG;AAArC;AACD;;AACD;AACE,aAAOJ,KAAP;AARJ;AAUD,CAXM","sourcesContent":["import { SEND_MESSAGE, CLEAR_MESSAGE } from \"./types\"\r\n\r\nexport const messageReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      return { ...state, sendEmail: action.payload }\r\n    }\r\n    case CLEAR_MESSAGE: {\r\n      return { ...state, sendEmail: action.payload }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}