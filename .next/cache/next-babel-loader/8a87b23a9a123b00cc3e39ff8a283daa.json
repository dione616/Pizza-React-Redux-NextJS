{"ast":null,"code":"var _jsxFileName = \"E:\\\\ProgramingTraining\\\\Courses\\\\2020\\\\Coding Revolution Next Redux\\\\pizzeria\\\\pages\\\\contact.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSubmit\", (values, actions) => {\n      console.log(values);\n      actions.setSubmitting(false);\n      actionsresetForm();\n    });\n\n    _defineProperty(this, \"handleRules\", values => {\n      let errors = {};\n\n      for (let prop in values) {\n        if (!values[prop]) {\n          errors[props] = \"required\";\n        }\n      }\n\n      const reg = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n\n      if (!reg.test(values.email)) {\n        errors.email = \"Not valid email\";\n      }\n\n      return errors;\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"title_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Contact Us\")), __jsx(\"div\", {\n      className: \"content_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Feel free to contact us\"), __jsx(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        message: \"\"\n      },\n      validate: values => this.handleRules(values),\n      onSubmit: (values, actions) => this.handleSubmit(values, actions),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, ({\n      errors,\n      values,\n      handleSubmit,\n      handleChange,\n      isSubmitting,\n      handleBlur,\n      touched\n    }) => __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"from-control\",\n      name: \"name\",\n      placeholder: \"Enter your name\",\n      value: values.name,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), errors.name && touched.name ? __jsx(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 52\n      }\n    }, errors.name) : null), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"email\",\n      className: \"from-control\",\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      value: values.email,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), errors.email && touched.email ? __jsx(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 54\n      }\n    }, errors.email) : null), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Write a message here\"), __jsx(\"textarea\", {\n      className: \"from-control\",\n      name: \"message\",\n      placeholder: \"Enter your message\",\n      value: values.message,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), errors.message && touched.message ? __jsx(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 58\n      }\n    }, errors.message) : null), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Submit\"))))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["E:/ProgramingTraining/Courses/2020/Coding Revolution Next Redux/pizzeria/pages/contact.js"],"names":["React","Component","Formik","Contact","values","actions","console","log","setSubmitting","actionsresetForm","errors","prop","props","reg","test","email","render","name","message","handleRules","handleSubmit","handleChange","isSubmitting","handleBlur","touched"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Formik } from \"formik\"\r\n\r\nclass Contact extends Component {\r\n  handleSubmit = (values, actions) => {\r\n    console.log(values)\r\n    actions.setSubmitting(false)\r\n    actionsresetForm()\r\n  }\r\n\r\n  handleRules = (values) => {\r\n    let errors = {}\r\n\r\n    for (let prop in values) {\r\n      if (!values[prop]) {\r\n        errors[props] = \"required\"\r\n      }\r\n    }\r\n\r\n    const reg = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/\r\n    if (!reg.test(values.email)) {\r\n      errors.email = \"Not valid email\"\r\n    }\r\n\r\n    return errors\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"title_page\">\r\n          <h1>Contact Us</h1>\r\n        </div>\r\n        <div className=\"content_wrapper\">\r\n          <div className=\"inner\">\r\n            <h1>Feel free to contact us</h1>\r\n            <Formik\r\n              initialValues={{ name: \"\", email: \"\", message: \"\" }}\r\n              validate={(values) => this.handleRules(values)}\r\n              onSubmit={(values, actions) => this.handleSubmit(values, actions)}\r\n            >\r\n              {({ errors, values, handleSubmit, handleChange, isSubmitting, handleBlur, touched }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"from-control\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter your name\"\r\n                      value={values.name}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.name && touched.name ? <div className=\"error_label\">{errors.name}</div> : null}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"from-control\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter your email\"\r\n                      value={values.email}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.email && touched.email ? <div className=\"error_label\">{errors.email}</div> : null}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Write a message here</label>\r\n                    <textarea\r\n                      className=\"from-control\"\r\n                      name=\"message\"\r\n                      placeholder=\"Enter your message\"\r\n                      value={values.message}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                    ></textarea>\r\n                    {errors.message && touched.message ? <div className=\"error_label\">{errors.message}</div> : null}\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Contact\r\n"]},"metadata":{},"sourceType":"module"}