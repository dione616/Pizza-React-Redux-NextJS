{"ast":null,"code":"import auth0 from \"auth0-js\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport getConfig from \"next/config\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\n\nclass Auth0 {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: \"dione616.eu.auth0.com\",\n      clientID: `${publicRuntimeConfig.client_id}`,\n      redirectUri: `${publicRuntimeConfig.base_url}/login-success`,\n      responseType: \"token id_token\",\n      scope: \"openid\"\n    });\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          resolve();\n        } else if (err) {\n          reject();\n        }\n      });\n    });\n  }\n\n  setSession(authResult) {\n    let expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n}\n\nconst auth0Serv = new Auth0();\nexport default auth0Serv;","map":{"version":3,"sources":["E:/ProgramingTraining/Courses/2020/Coding Revolution Next Redux/pizzeria/lib/appAuth.js"],"names":["auth0","Cookies","axios","getConfig","publicRuntimeConfig","Auth0","constructor","WebAuth","domain","clientID","client_id","redirectUri","base_url","responseType","scope","handleAuthentication","bind","Promise","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","expiresAt","JSON","stringify","expiresIn","Date","getTime","login","authorize","auth0Serv"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BD,SAAS,EAAzC;;AAEA,MAAME,KAAN,CAAY;AACVC,EAAAA,WAAW,GAAG;AACZ,SAAKN,KAAL,GAAa,IAAIA,KAAK,CAACO,OAAV,CAAkB;AAC7BC,MAAAA,MAAM,EAAE,uBADqB;AAE7BC,MAAAA,QAAQ,EAAG,GAAEL,mBAAmB,CAACM,SAAU,EAFd;AAG7BC,MAAAA,WAAW,EAAG,GAAEP,mBAAmB,CAACQ,QAAS,gBAHhB;AAI7BC,MAAAA,YAAY,EAAE,gBAJe;AAK7BC,MAAAA,KAAK,EAAE;AALsB,KAAlB,CAAb;AAOA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDD,EAAAA,oBAAoB,GAAG;AACrB,WAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKnB,KAAL,CAAWoB,SAAX,CAAqB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACxC,YAAIA,UAAU,IAAIA,UAAU,CAACC,WAAzB,IAAwCD,UAAU,CAACE,OAAvD,EAAgE;AAC9D,eAAKC,UAAL,CAAgBH,UAAhB;AACAJ,UAAAA,OAAO;AACR,SAHD,MAGO,IAAIG,GAAJ,EAAS;AACdF,UAAAA,MAAM;AACP;AACF,OAPD;AAQD,KATM,CAAP;AAUD;;AAEDM,EAAAA,UAAU,CAACH,UAAD,EAAa;AACrB,QAAII,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeN,UAAU,CAACO,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EAA7C,CAAhB;AACD;;AACDC,EAAAA,KAAK,GAAG;AACN,SAAKhC,KAAL,CAAWiC,SAAX;AACD;;AA9BS;;AAgCZ,MAAMC,SAAS,GAAG,IAAI7B,KAAJ,EAAlB;AACA,eAAe6B,SAAf","sourcesContent":["import auth0 from \"auth0-js\"\r\nimport Cookies from \"js-cookie\"\r\nimport axios from \"axios\"\r\n\r\nimport getConfig from \"next/config\"\r\nconst { publicRuntimeConfig } = getConfig()\r\n\r\nclass Auth0 {\r\n  constructor() {\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: \"dione616.eu.auth0.com\",\r\n      clientID: `${publicRuntimeConfig.client_id}`,\r\n      redirectUri: `${publicRuntimeConfig.base_url}/login-success`,\r\n      responseType: \"token id_token\",\r\n      scope: \"openid\",\r\n    })\r\n    this.handleAuthentication = this.handleAuthentication.bind(this)\r\n  }\r\n\r\n  handleAuthentication() {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n        if (authResult && authResult.accessToken && authResult.idToken) {\r\n          this.setSession(authResult)\r\n          resolve()\r\n        } else if (err) {\r\n          reject()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  setSession(authResult) {\r\n    let expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime())\r\n  }\r\n  login() {\r\n    this.auth0.authorize()\r\n  }\r\n}\r\nconst auth0Serv = new Auth0()\r\nexport default auth0Serv\r\n"]},"metadata":{},"sourceType":"module"}